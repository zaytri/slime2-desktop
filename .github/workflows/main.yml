name: 'publish'

on:
  workflow_dispatch:
  push:
    branches:
      - release/beta
      - release/live

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # Intel based Mac
            args: '--target x86_64-apple-darwin'
          - platform: 'macos-latest' # Arm based Mac (M1 and above)
            args: '--target aarch64-apple-darwin'
          - platform: 'ubuntu-22.04' # Linux
            args: ''
          - platform: 'ubuntu-22.04-arm' # Arm based Linux
            args: ''
          - platform: 'windows-latest' # Windows 10/11
            args: ''
          - platform: 'windows-11-arm' # Arm based Windows 11
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Linux Dependencies # skipped for Windows/Mac
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: Install Rust (Stable)
        uses: dtolnay/rust-toolchain@stable # Set this to dtolnay/rust-toolchain@nightly
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust Cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: NPM Install
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: npm install # change this to npm or pnpm depending on which one you use.

      - name: Tauri Info
        run: npm run tauri info

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: '${{ github.ref_name }}-v__VERSION__' # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'Slime2 v__VERSION__ ${{ github.ref_name }}'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: ${{ github.ref_name == 'release/beta' }}
          args: ${{ matrix.args }}
          assetNamePattern: 'slime2_v[version]_${{ runner.os }}_${{ runner.arch }}[ext]'
