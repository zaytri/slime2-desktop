/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WidgetIdImport } from './routes/$widgetId'

// Create/Update Routes

const WidgetIdRoute = WidgetIdImport.update({
  id: '/$widgetId',
  path: '/$widgetId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$widgetId': {
      id: '/$widgetId'
      path: '/$widgetId'
      fullPath: '/$widgetId'
      preLoaderRoute: typeof WidgetIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/$widgetId': typeof WidgetIdRoute
}

export interface FileRoutesByTo {
  '/$widgetId': typeof WidgetIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$widgetId': typeof WidgetIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/$widgetId'
  fileRoutesByTo: FileRoutesByTo
  to: '/$widgetId'
  id: '__root__' | '/$widgetId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  WidgetIdRoute: typeof WidgetIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  WidgetIdRoute: WidgetIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$widgetId"
      ]
    },
    "/$widgetId": {
      "filePath": "$widgetId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
